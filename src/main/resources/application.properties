spring.application.name=piqProject

#################### JPA/Hibernate 설정 ####################
# --- 핵심 설정 ---
# JPA(Hibernate)가 엔티티를 기반으로 테이블을 자동으로 생성하도록 설정
# create: 애플리케이션 시작 시 기존 테이블을 삭제하고 새로 생성 (개발용)
# create-drop: 시작 시 생성, 종료 시 삭제 (테스트용)
# update: 변경된 부분만 반영
# validate: 엔티티와 테이블이 일치하는지만 검증
# none: 자동 생성 기능 사용 안 함
spring.jpa.hibernate.ddl-auto=create-drop

# JPA가 테이블을 모두 생성한 이후에 data.sql 스크립트가 실행되도록 지연시킴
spring.jpa.defer-datasource-initialization=true

# JPA가 생성하는 SQL을 콘솔에 출력
spring.jpa.show-sql=true
#콘솔에 출력되는 SQL을 보기좋게 정렬
spring.jpa.properties.hibernate.format_sql=true

#################### 데이터베이스 초기화 설정 ####################
# DB driver 설정
spring.datasource.driver-class-name=org.h2.Driver
# H2 DB URL 설정
spring.datasource.url=jdbc:h2:mem:testdb
# H2 DB 사용자 이름 설정
spring.datasource.username=sa
# H2 DB 비밀번호 설정 (기본값은 없음)
spring.datasource.password=
# H2 콘솔 기능 활성화 
spring.h2.console.enabled=true
# H2 콘솔 접속 경로 설정 (http://localhost:8080/h2-console 로 접속)
spring.h2.console.path=/h2-console

#################### JWT 설정  ####################
# JWT 비밀 키 설정(환경변수로부터 값을 읽어오며, 없을 경우 기본값으로 'privateKey' 사용)
jwt.secret-key=${JWT_SECRET:cGxxLXByb2plY3Qtc2VjcmV0LWtleS1mb3Itand0LWF1dGhlbnRpY2F0aW9uLXN5c3RlbS1zcHJpbmctYm9vdA}
# JWT 토큰 만료 시간 설정 (1시간)
jwt.expiration=3600000
# JWT Issuer 설정
jwt.issuer=${JWT_ISSUER:PJT}
# JWT refresh Token 만료 기간 설정 (7일 = 7 * 24 * 3600 * 1000 ms)
jwt.refresh-expiration=604800000




#################### 로깅 프레임워크 설정 ####################
### 전체 애플리케이션의 로그 레벨을 ""로 설정(""보다 낮은 레벨의 로그는 출력되지 않음)###
# 심각도: TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
logging.level.root=INFO

### 특정 패키지와 하위 패키지 로그레벨을 설정 ###
# ex: com.example.demo 패키지와 그 하위 패키지의 로그 레벨을 DEBUG로 설정
#logging.level.com.example.demo=DEBUG

### 특정 컨트롤러 클래스의 로그 레벨을 설정 ###
# ex: logging.level.com.example.demo.MyController=TRACE

### 로그 형식(Log Format) 설정 ###
# 콘솔 로그의 패턴을 지정
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
# 파일 로그의 패턴을 지정
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

### logs 폴더 아래에 my-app.log 라는 이름으로 로그 파일 생성### 
# logging.file.name=logs/my-app.log -> 로그를 파일에 출력할 때

#################### Redis configuration ####################
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=

#################### Hibernate 설정 ####################
### N+1 문제 해결 ###
spring.jpa.properties.hibernate.default_batch_fetch_size=100