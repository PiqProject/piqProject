plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'piq'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ##DB dependency
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2:'

    // ##Security,JWT
    implementation 'org.springframework.boot:spring-boot-starter-security' //JWT filter등록을 위해 필요
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'// JWT의 인터페이스와 핵심 클래스들을 담고있다.
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'//실제 JWT를 생성하고 파싱하는 로직이 구현되어있다.
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'//JWT의 헤더와 페이로드는 JSON 형식. 이 JSON을 자바 객체로 변환하거나 그 반대의 작업을 수행할 때 필요한 라이브러리

    // ## redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
    useJUnitPlatform()
}
